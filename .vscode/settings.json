{
    // UI color customizations (window-level). If you still see a scope warning in multi-root,
    // move this block into the *main* .code-workspace file or User settings.
    "workbench.colorCustomizations": {
        "editor.background": "#010101",
        "activityBar.background": "#2B294C",
        "titleBar.activeBackground": "#3C3A6B",
        "titleBar.activeForeground": "#FCFCFD"
    },
    // Speed up global search by ignoring generated/heavy folders
    "search.exclude": {
        "**/.git": true,
        "**/target": true,
        "**/.ipynb_checkpoints": true,
        "**/*.ipynb": false,
        // Exclude external Windows mount to avoid slow NTFS scans
        "/media/rustuser/onSSD/**": true
    },
    // Reduce file watcher churn
    "files.watcherExclude": {
        "**/.git/**": true,
        "**/target/**": true,
        "**/.ipynb_checkpoints/**": true,
        "/media/rustuser/onSSD/**": true
    },
   

    // Control which features rust-analyzer enables when resolving the crate graph.
    // This mirrors `cargo check --features "..."` for analysis.
    // You can list multiple crates and feature sets.
    // rust-analyzer.cargo.features must be an ARRAY of feature names (previously mis-specified as an object).
    // These features will be passed to cargo for the linked root crate.
    "rust-analyzer.cargo.features": ["fft", "egui", "audio"],

    // Disable automatic workspace discovery so only the explicitly linked root Cargo.toml is analyzed.
    "rust-analyzer.cargo.workspace": false,

    // Speed up analysis by skipping build scripts and proc macros unless needed.
    "rust-analyzer.cargo.buildScripts.enable": false,
    "rust-analyzer.procMacro.enable": true
}